/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "volcano.sh/apis/pkg/apis/topology/v1alpha1"
)

// HyperNodeLister helps list HyperNodes.
// All objects returned here must be treated as read-only.
type HyperNodeLister interface {
	// List lists all HyperNodes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HyperNode, err error)
	// Get retrieves the HyperNode from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HyperNode, error)
	HyperNodeListerExpansion
}

// hyperNodeLister implements the HyperNodeLister interface.
type hyperNodeLister struct {
	listers.ResourceIndexer[*v1alpha1.HyperNode]
}

// NewHyperNodeLister returns a new HyperNodeLister.
func NewHyperNodeLister(indexer cache.Indexer) HyperNodeLister {
	return &hyperNodeLister{listers.New[*v1alpha1.HyperNode](indexer, v1alpha1.Resource("hypernode"))}
}
