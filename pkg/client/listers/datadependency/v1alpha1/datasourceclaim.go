/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	datadependencyv1alpha1 "volcano.sh/apis/pkg/apis/datadependency/v1alpha1"
)

// DataSourceClaimLister helps list DataSourceClaims.
// All objects returned here must be treated as read-only.
type DataSourceClaimLister interface {
	// List lists all DataSourceClaims in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*datadependencyv1alpha1.DataSourceClaim, err error)
	// DataSourceClaims returns an object that can list and get DataSourceClaims.
	DataSourceClaims(namespace string) DataSourceClaimNamespaceLister
	DataSourceClaimListerExpansion
}

// dataSourceClaimLister implements the DataSourceClaimLister interface.
type dataSourceClaimLister struct {
	listers.ResourceIndexer[*datadependencyv1alpha1.DataSourceClaim]
}

// NewDataSourceClaimLister returns a new DataSourceClaimLister.
func NewDataSourceClaimLister(indexer cache.Indexer) DataSourceClaimLister {
	return &dataSourceClaimLister{listers.New[*datadependencyv1alpha1.DataSourceClaim](indexer, datadependencyv1alpha1.Resource("datasourceclaim"))}
}

// DataSourceClaims returns an object that can list and get DataSourceClaims.
func (s *dataSourceClaimLister) DataSourceClaims(namespace string) DataSourceClaimNamespaceLister {
	return dataSourceClaimNamespaceLister{listers.NewNamespaced[*datadependencyv1alpha1.DataSourceClaim](s.ResourceIndexer, namespace)}
}

// DataSourceClaimNamespaceLister helps list and get DataSourceClaims.
// All objects returned here must be treated as read-only.
type DataSourceClaimNamespaceLister interface {
	// List lists all DataSourceClaims in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*datadependencyv1alpha1.DataSourceClaim, err error)
	// Get retrieves the DataSourceClaim from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*datadependencyv1alpha1.DataSourceClaim, error)
	DataSourceClaimNamespaceListerExpansion
}

// dataSourceClaimNamespaceLister implements the DataSourceClaimNamespaceLister
// interface.
type dataSourceClaimNamespaceLister struct {
	listers.ResourceIndexer[*datadependencyv1alpha1.DataSourceClaim]
}
