/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	batchv1alpha1 "volcano.sh/apis/pkg/apis/batch/v1alpha1"
)

// ReservationLister helps list Reservations.
// All objects returned here must be treated as read-only.
type ReservationLister interface {
	// List lists all Reservations in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*batchv1alpha1.Reservation, err error)
	// Get retrieves the Reservation from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*batchv1alpha1.Reservation, error)
	ReservationListerExpansion
}

// reservationLister implements the ReservationLister interface.
type reservationLister struct {
	listers.ResourceIndexer[*batchv1alpha1.Reservation]
}

// NewReservationLister returns a new ReservationLister.
func NewReservationLister(indexer cache.Indexer) ReservationLister {
	return &reservationLister{listers.New[*batchv1alpha1.Reservation](indexer, batchv1alpha1.Resource("reservation"))}
}
