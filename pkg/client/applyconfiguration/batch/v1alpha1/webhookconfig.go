/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// WebHookConfigApplyConfiguration represents a declarative configuration of the WebHookConfig type for use
// with apply.
type WebHookConfigApplyConfiguration struct {
	URL            *string           `json:"url,omitempty"`
	Method         *string           `json:"method,omitempty"`
	Headers        map[string]string `json:"headers,omitempty"`
	Body           *string           `json:"body,omitempty"`
	TimeoutSeconds *int32            `json:"timeoutSeconds,omitempty"`
	Retries        *int32            `json:"retries,omitempty"`
}

// WebHookConfigApplyConfiguration constructs a declarative configuration of the WebHookConfig type for use with
// apply.
func WebHookConfig() *WebHookConfigApplyConfiguration {
	return &WebHookConfigApplyConfiguration{}
}

// WithURL sets the URL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the URL field is set to the value of the last call.
func (b *WebHookConfigApplyConfiguration) WithURL(value string) *WebHookConfigApplyConfiguration {
	b.URL = &value
	return b
}

// WithMethod sets the Method field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Method field is set to the value of the last call.
func (b *WebHookConfigApplyConfiguration) WithMethod(value string) *WebHookConfigApplyConfiguration {
	b.Method = &value
	return b
}

// WithHeaders puts the entries into the Headers field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Headers field,
// overwriting an existing map entries in Headers field with the same key.
func (b *WebHookConfigApplyConfiguration) WithHeaders(entries map[string]string) *WebHookConfigApplyConfiguration {
	if b.Headers == nil && len(entries) > 0 {
		b.Headers = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Headers[k] = v
	}
	return b
}

// WithBody sets the Body field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Body field is set to the value of the last call.
func (b *WebHookConfigApplyConfiguration) WithBody(value string) *WebHookConfigApplyConfiguration {
	b.Body = &value
	return b
}

// WithTimeoutSeconds sets the TimeoutSeconds field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TimeoutSeconds field is set to the value of the last call.
func (b *WebHookConfigApplyConfiguration) WithTimeoutSeconds(value int32) *WebHookConfigApplyConfiguration {
	b.TimeoutSeconds = &value
	return b
}

// WithRetries sets the Retries field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Retries field is set to the value of the last call.
func (b *WebHookConfigApplyConfiguration) WithRetries(value int32) *WebHookConfigApplyConfiguration {
	b.Retries = &value
	return b
}
