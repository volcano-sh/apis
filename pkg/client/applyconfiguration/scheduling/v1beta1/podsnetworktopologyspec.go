/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1beta1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// PodsNetworkTopologySpecApplyConfiguration represents a declarative configuration of the PodsNetworkTopologySpec type for use
// with apply.
type PodsNetworkTopologySpecApplyConfiguration struct {
	NetworkTopology *NetworkTopologySpecApplyConfiguration `json:"networkTopology,omitempty"`
	LabelMatch      *v1.LabelSelectorApplyConfiguration    `json:"labelMatch,omitempty"`
	TaskName        *string                                `json:"taskName,omitempty"`
}

// PodsNetworkTopologySpecApplyConfiguration constructs a declarative configuration of the PodsNetworkTopologySpec type for use with
// apply.
func PodsNetworkTopologySpec() *PodsNetworkTopologySpecApplyConfiguration {
	return &PodsNetworkTopologySpecApplyConfiguration{}
}

// WithNetworkTopology sets the NetworkTopology field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NetworkTopology field is set to the value of the last call.
func (b *PodsNetworkTopologySpecApplyConfiguration) WithNetworkTopology(value *NetworkTopologySpecApplyConfiguration) *PodsNetworkTopologySpecApplyConfiguration {
	b.NetworkTopology = value
	return b
}

// WithLabelMatch sets the LabelMatch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LabelMatch field is set to the value of the last call.
func (b *PodsNetworkTopologySpecApplyConfiguration) WithLabelMatch(value *v1.LabelSelectorApplyConfiguration) *PodsNetworkTopologySpecApplyConfiguration {
	b.LabelMatch = value
	return b
}

// WithTaskName sets the TaskName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TaskName field is set to the value of the last call.
func (b *PodsNetworkTopologySpecApplyConfiguration) WithTaskName(value string) *PodsNetworkTopologySpecApplyConfiguration {
	b.TaskName = &value
	return b
}
